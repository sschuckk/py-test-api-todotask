{"name": "test_update_task", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 201\n +  where 200 = <Response [200]>.status_code", "trace": "@allure.testcase('ITC-002')\n    def test_update_task():\n        \"\"\"\n        This test case checks whether the update_task function successfully updates the details of an existing task.\n        It involves creating a task, updating its content and status, and then verifying the changes.\n        \"\"\"\n        # Create a new task\n        payload = new_task_payload()\n        create_task_response = create_task(payload)\n        assert create_task_response.status_code == 200\n        task_id = create_task_response.json()['task']['task_id']\n    \n        # Update the task\n        updated_task_payload = {\n            \"task_id\": task_id,\n            \"user_id\": payload[\"user_id\"],\n            \"content\": \"Task content updated!\",\n            \"is_done\": True,\n        }\n        update_task_response = update_task(updated_task_payload)\n        assert update_task_response.status_code == 200\n    \n        # Get and verify the changes\n        get_task_response = get_task(task_id)\n>       assert get_task_response.status_code == 201\nE       assert 200 == 201\nE        +  where 200 = <Response [200]>.status_code\n\npy_test_api\\tests\\test_integration_api_methods.py:53: AssertionError"}, "description": "\n    This test case checks whether the update_task function successfully updates the details of an existing task.\n    It involves creating a task, updating its content and status, and then verifying the changes.\n    ", "steps": [{"name": "Creating a new payload with random values", "status": "passed", "start": 1700058031080, "stop": 1700058031080}, {"name": "Sending PUT request to create a task", "status": "passed", "parameters": [{"name": "payload", "value": "{'content': 'test_content_c1f6bf75ccd14697b304ea1ac064de56', 'user_id': 'test_user_d3d960a2e857497db707ea9114a2491a', 'is_done': False}"}], "start": 1700058031080, "stop": 1700058031599}, {"name": "Sending PUT request to update a task", "status": "passed", "parameters": [{"name": "payload", "value": "{'task_id': 'task_8aebea73dedf404ab375297ec897512b', 'user_id': 'test_user_d3d960a2e857497db707ea9114a2491a', 'content': 'Task content updated!', 'is_done': True}"}], "start": 1700058031599, "stop": 1700058032122}, {"name": "Sending get request", "status": "passed", "parameters": [{"name": "task_id", "value": "'task_8aebea73dedf404ab375297ec897512b'"}], "start": 1700058032122, "stop": 1700058032580}], "attachments": [{"name": "log", "source": "891cc597-483a-44e5-9c22-eaf2824b51f3-attachment.txt", "type": "text/plain"}], "start": 1700058031080, "stop": 1700058032580, "uuid": "98d18a78-ca19-423f-a3bd-b0a9471372a6", "historyId": "b6f02e892227bb1e51ebbbf2b11c0c1d", "testCaseId": "b6f02e892227bb1e51ebbbf2b11c0c1d", "fullName": "py_test_api.tests.test_integration_api_methods#test_update_task", "labels": [{"name": "parentSuite", "value": "py_test_api.tests"}, {"name": "suite", "value": "test_integration_api_methods"}, {"name": "host", "value": "LAPTOP-AGQ3SVR3"}, {"name": "thread", "value": "9956-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "py_test_api.tests.test_integration_api_methods"}], "links": [{"type": "tms", "url": "ITC-002", "name": "ITC-002"}]}